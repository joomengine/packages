{
    "name": "Importer Queue",
    "description": "Importer Queue",
    "dynamic_get": "0ac7277b-8f9f-4119-b22b-26f8c22e988b",
    "guid": "dbf2580a-f6a5-4963-8103-85b996a5bed7",
    "php_view": "function reorderObjectKeysByMap(&$arrayOfObjects, $headers)\r\n{\r\n\t$headerKeys = array_keys($headers); \/\/ Get the desired key order from the headers\r\n\tforeach ($arrayOfObjects as &$object)\r\n\t{\r\n\t\t$array = (array) $object; \/\/ Convert object to associative array\r\n\t\t\/\/ Create a new array with keys ordered according to the headers\r\n\t\t$reorderedArray = [];\r\n\t\tforeach ($headerKeys as $key)\r\n\t\t{\r\n\t\t\t\/\/ Add the key in the defined order, even if it doesn't exist in the object\r\n\t\t\t$reorderedArray[$key] = isset($array[$key]) ? $array[$key] : null;\r\n\t\t}\r\n\t\t\/\/ Convert the reordered array back to an object\r\n\t\t$object = (object) $reorderedArray;\r\n\t}\r\n}\r\n\r\nif ($this->queue)\r\n{\r\n\t$table_id = Super___1f28cb53_60d9_4db1_b517_3c7dc6b429ef___Power::random(7);\r\n\t$headers = [\r\n\t\t'guid' => '',\r\n\t\t'target' => '',\r\n\t\t'number' => '',\r\n\t\t'file_name' => Text::_('File Name'),\r\n\t\t'import_status' => Text::_('Status'),\r\n\t\t'created' => Text::_('Date')\r\n\t];\r\n\t\/\/ Reorder the keys of each object according to the map\r\n\treorderObjectKeysByMap($this->queue, $headers);\r\n}\r\n\r\n\/\/ Create the message endpoint\r\n$url = '';\r\nif ($this->app->isClient('site'))\r\n{\r\n\t$url = Joomla___eecc143e_b5cf_4c33_ba4d_97da1df61422___Power::root();\r\n}\r\n$token = Joomla___5ba38513_5c4f_4b0d_935e_49e986a6bce8___Power::getFormToken();\r\n$messageEndpoint = \"{$url}index.php?option=com_[[[component]]]&task=ajax.getMessages&format=json&raw=true&{$token}=1\";\r\n\r\n\/\/ create the modal details for messages\r\n$message_id = 'message-modal-' . Super___1f28cb53_60d9_4db1_b517_3c7dc6b429ef___Power::random(7);\r\n$message_header = Text::_('Import Message Log(s)');\r\n$message_content = '<div id=\"' . $message_id . '-area\">...<\/div>';",
    "add_php_view": 1,
    "template": "<h3><?php echo Text::_('Import Queue'); ?><\/h3>\r\n<?php if ($this->queue): ?>\r\n\r\n<?php echo Joomla___7ab82272_0b3d_4bb1_af35_e63a096cfe0b___Power::render('table',\r\n\t[\r\n\t\t'id' => $table_id,\r\n\t\t'items' => $this->queue,\r\n\t\t'headers' => $headers,\r\n\t\t'init' => false\r\n\t]\r\n); ?>\r\n\r\n<?php echo Joomla___7ab82272_0b3d_4bb1_af35_e63a096cfe0b___Power::render('modal',\r\n\t[\r\n\t\t'id' => $message_id,\r\n\t\t'header' => $message_header,\r\n\t\t'content' => $message_content,\r\n\t\t'modal_class' => 'uk-flex-top',\r\n\t\t'dialog_class' => 'uk-modal-dialog uk-modal-body uk-margin-auto-vertical'\r\n\t]\r\n); ?>\r\n\r\n<script type=\"text\/javascript\">\r\n\/\/ message endpoint to fetch the messages\r\nconst messageEndpoint = '<?php echo $messageEndpoint; ?>';\r\n\/\/ Get the element with ID 'message-modal-xxx' to manage the modal\r\nconst modalElement = document.getElementById('<?php echo $message_id; ?>');\r\n\/\/ init our table\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\tvar <?php echo $table_id; ?> = new DataTable('#<?php echo $table_id; ?>', {\r\n\t\torder: [[ 2, \"desc\" ]],\r\n\t\tinfo: true,\r\n\t\tpaging: true,\r\n\t\tdeferRender: true,\r\n\t\tselect:  true,\r\n\t\tcolumnDefs: [\r\n\t\t\t{ 'targets': [ 0, 1 ], 'visible': false, 'searchable': false }\r\n\t\t],\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tdata: 'guid'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdata: 'target'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdata: 'number'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdata: 'file_name'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdata: 'import_status',\r\n\t\t\t\trender: function(data, type, row) {\r\n\t\t\t\t\tif (type === 'display' && data.length > 0) {\r\n\t\t\t\t\t\treturn data + '  <a href=\"#\" onclick=\"getMessages(\\\"row.guid\\\", \\\"row.target\\\");\" class=\"uk-icon-button\" uk-icon=\"info\"><\/a>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdata: 'created'\r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\t\/\/ Adjust the table size when the tab is shown using the custom event\r\n\tdocument.addEventListener('joomla.tab.show', function() {\r\n\t\tconst tableContainer = document.querySelector('#<?php echo $table_id; ?>');\r\n\t\ttableContainer.style.width = '100%'; \/\/ Ensure the container is 100% width\r\n\t\t<?php echo $table_id; ?>.columns.adjust().draw();\r\n\t});\r\n\t<?php echo $table_id; ?>.on( 'select', function ( e, dt, type, indexes ) {\r\n\t\tif ( type === 'row' ) {\r\n\t\t\t\/\/ get the data from the row\r\n\t\t\tlet data = <?php echo $table_id; ?>.rows( indexes ).data();\r\n\t\t\t\/\/ get the guid\r\n\t\t\tlet guid = data[0].guid;\r\n\t\t\t\/\/ get the target\r\n\t\t\tlet target = data[0].target;\r\n\t\t\t\/\/ get the message for this import item\r\n\t\t\tgetMessages(guid, target);\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\/**\r\n * Retrieves messages from the server and handles the response.\r\n * \r\n * @param {string} entity - The GUID of the item to retrieve messages for.\r\n * @param {string} target - The target parameter for the request.\r\n *\/\r\nfunction getMessages(entity, target) {\r\n    \/\/ Ensure the messageEndpoint variable is defined\r\n    if (typeof messageEndpoint === 'undefined') {\r\n        console.error('Error: messageEndpoint is not defined.');\r\n        return;\r\n    }\r\n\r\n    \/\/ Build the URL with encoded query parameters to prevent injection attacks\r\n    const url = `${messageEndpoint}&entity=${encodeURIComponent(entity)}&target=${encodeURIComponent(target)}`;\r\n\r\n    \/\/ Make a GET request using the Fetch API\r\n    fetch(url)\r\n        .then(response => {\r\n            \/\/ Check if the response status is OK (status code 200-299)\r\n            if (!response.ok) {\r\n                throw new Error(`Network response was not ok (Status: ${response.status})`);\r\n            }\r\n            \/\/ Parse the response body as JSON\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            \/\/ Check if the response contains an 'error' property\r\n            if (data.error) {\r\n                \/\/ Display the error message using UIkit.notification with 'danger' status\r\n                UIkit.notification({\r\n                    message: data.error,\r\n                    status: 'danger',\r\n                    pos: 'top-right',\r\n                    timeout: 5000\r\n                });\r\n                return; \/\/ Stop further processing\r\n            }\r\n\r\n            \/\/ Check if the response contains an 'html' property\r\n            if (data.html) {\r\n                \/\/ Get the element with ID 'message-modal-xxx-area' to insert HTML content\r\n                const modalContentElement = document.getElementById('<?php echo $message_id; ?>-area');\r\n                if (modalContentElement && modalElement) {\r\n                    \/\/ Insert the HTML content into the modal area\r\n                    modalContentElement.innerHTML = data.html;\r\n                } else {\r\n                    console.error('Error: Element with ID \"message-modal\" not found.');\r\n                    return;\r\n                }\r\n\r\n                \/\/ Display the modal using UIkit.modal\r\n                UIkit.modal(modalElement).show();\r\n            }\r\n        })\r\n        .catch(error => {\r\n            \/\/ Handle any errors that occurred during the fetch operation\r\n            console.error('Fetch error:', error);\r\n            UIkit.notification({\r\n                message: 'An error occurred while fetching messages.',\r\n                status: 'danger',\r\n                pos: 'top-right',\r\n                timeout: 5000\r\n            });\r\n        });\r\n}\r\n<\/script>\r\n<?php else: ?>\r\n\t<div class=\"alert alert-success\" role=\"alert\">\r\n\t\t<p><?php echo Text::_('All your imports will be listed here, with their status, and any other related details.'); ?><\/p>\r\n\t<\/div>\r\n<?php endif; ?>",
    "snippet": "0",
    "libraries": {
        "0": "4c3e3dce-0845-46cb-9e4a-494f75dc7dd8",
        "1": "5eeee148-cebd-4a92-bc0e-56efea3cffdc"
    },
    "alias": "importerqueue",
    "@dependencies": [
        {
            "key": "guid",
            "value": "0ac7277b-8f9f-4119-b22b-26f8c22e988b",
            "entity": "dynamic_get",
            "table": "#__componentbuilder_dynamic_get",
            "direction": "out"
        },
        {
            "key": "guid",
            "value": "2fe723e3-879e-4c08-aaf3-0de098ed7f25",
            "entity": "layout",
            "table": "#__componentbuilder_layout",
            "direction": "out"
        },
        {
            "key": "guid",
            "value": "0eb94218-5798-4170-9ce5-5cf11607086d",
            "entity": "layout",
            "table": "#__componentbuilder_layout",
            "direction": "out"
        }
    ]
}